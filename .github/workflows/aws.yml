name: CI/CD to ECS from GitHub

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image and push to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t hemanth42079/medusa-store:latest .
          docker push hemanth42079/medusa-store:latest

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Update ECS task definition with the new image
      - name: Update ECS task definition
        id: update-task-def
        run: |
          TASK_DEF=$(aws ecs describe-task-definition \
            --task-definition medusa-task \
            --region us-east-1)

          NEW_TASK_DEF=$(echo "$TASK_DEF" | jq \
            '.taskDefinition |
            .containerDefinitions[0].image = "hemanth42079/medusa-store:latest" |
            del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')

          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --region us-east-1 \
            --cli-input-json "$NEW_TASK_DEF" \
            | jq -r '.taskDefinition.taskDefinitionArn')

          echo "New task definition ARN: $NEW_TASK_DEF_ARN"
          echo "task_definition_arn=$NEW_TASK_DEF_ARN" >> $GITHUB_OUTPUT

      # Deploy updated task to ECS service
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster medusa-cluster \
            --service medusa-service \
            --task-definition ${{ steps.update-task-def.outputs.task_definition_arn }} \
            --force-new-deployment \
            --region us-east-1

      # Wait for ECS service to stabilize
      - name: Wait for ECS service stability
        run: |
          aws ecs wait services-stable \
            --cluster medusa-cluster \
            --services medusa-service \
            --region us-east-1
